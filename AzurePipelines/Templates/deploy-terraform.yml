parameters:
- name: terraformFolder
  type: string
- name: containerName
  type: string
- name: environment
  type: string
  default: 'ALL'
- name: commandOptionsArguements
  type: string
  default: ''

steps:
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '1.1.9'

- task: TerraformTaskV2@2
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    #ensureBackend: true # to make sure that we have the backend
    workingDirectory: Terraform/${{ parameters.terraformFolder }}
    backendServiceArm: $(azureServicePrincipal)
    backendAzureRmResourceGroupName: $(terraformResourceGroup)
    backendAzureRmStorageAccountName: $(terraformStorageAccountName)
    backendAzureRmContainerName: ${{ parameters.containerName }}
    backendAzureRmKey: $(projectName)/${{ lower(parameters.environment) }}.tfstate
    
- task: TerraformTaskV2@2
  displayName: 'Terraform Plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: Terraform/${{ parameters.terraformFolder }}
    commandOptions: >
      -out ${{ parameters.terraformFolder }}.tfplan 
      -input=false 
      -var="projectName=$(projectName)"
      -var="environment=${{ parameters.environment }}"
      -var="pipelineURI=$(pipelineURI)" 
      ${{ parameters.commandOptionsArguements }}
    environmentServiceNameAzureRM: $(azureServicePrincipal)


- task: TerraformTaskV2@2
  name: terraformApply
  displayName: 'Terraform Apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: Terraform/${{ parameters.terraformFolder }}
    commandOptions: ${{ parameters.terraformFolder }}.tfplan
    environmentServiceNameAzureRM: $(azureServicePrincipal)

- powershell: |
    $terraformOutput = Get-Content "$(terraformApply.jsonOutputVariablesPath)" | ConvertFrom-Json
    $terraformOutput | Get-Member -MemberType NoteProperty | % { $o = $terraformOutput.($_.Name); Write-Host "##vso[task.setvariable variable=$($_.Name);isoutput=true;issecret=$($o.sensitive)]$($o.value)" }
    Write-Output "TerraformOutput: $terraformOutput"  
  name: terraformOutput
  displayName: Read terraform outputs